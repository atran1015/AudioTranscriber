install.packages("dpylr")
library(dplyr)
filter(mpg, cty > 27)
library(ggplot2)
filter(mpg, cty > 27)
install.packages("tidyverse")
library(tidyverse)
select(mpg, -manufacturer, -model)
install.packages("tidyverse", dependencies=T)
library(tidyverse)
mpg %>% filter(cty > 25) %>% select(manufacturer)
iris %>% filter(Petal.Length > 3.0) %>% filter(Petal.Width > 1.0)
iris
mpg %>% desc(select(cty))
mpg %>% desc(cty)
desc(mpg, cty)
desc(cty)
mpg$cty
desc(mpg$cty)
desc(select(mpg$-manufacturer,mpg$-cty))
desc(select(mpg$manufacturer,mpg$cty))
select(desc(mpg$manufacturer,mpg$cty))
select(desc(mpg$manufacturer))
desc(-cty)
desc(-mpg$cty)
mpg %>% desc(cty) %>% select(manufacturer, mpg$cty)
mpg %>% desc(manufacturer, mpg$cty) %>% select(manufacturer, mpg$cty)
mpg %>% desc(manufacturer) %>% select(manufacturer, mpg$cty)
mpg %>% desc(manufacturer) %>% select(manufacturer)
mpg %>% arrange(mpg$cty) %>% select(manufacturer, mpg$cty)
mpg %>% arrange(cty) %>% select(manufacturer, cty)
mpg %>% arrange(cty) %>% select(manufacturer, cty, hwy)
mpg %>% arrange(cty,hwy) %>% select(manufacturer, cty, hwy)
mpg %>% arrange(-cty) %>% select(manufacturer, cty, hwy)
mpg %>% arrange(-cty) %>% filter(manufacturer == "audi") %>% select(manufacturer, cty, hwy)
mpg %>% arrange(-cty) %>% filter(manufacturer == "honda", cty > 25) %>% select(manufacturer, cty, hwy)
mpg
mpg %>% arrange(-cty) %>% filter(manufacturer == "honda", cty > 25) %>% select(model)
mpg %>% mutate((cty+hwy)/2) %>% view()
mpg %>% mutate((cty+hwy)/2) %>% View()
mpg %>% mutate(avemileage+(cty+hwy)/2) %>% View()
mpg %>% mutate(avemileage=(cty+hwy)/2) %>% View()
mpg %>% mutate(avemileage=(cty+hwy)/2) %>% select(1:9, avemileage, 10:11)%>%View()
library(nycflights13)
install.packages("nycflights13")
View(nycflights13)
nycflights13
nycflights13::
nycflights13::airlines
nycflights13$airlines
library(nycflights13)
View(nycflights13)
View(nycflights13)
nycflights13$airlines
flights
flights %>% filter(departed)
library(tidyverse)
library(dplyr)
flights %>% filter(departed)
names(flights)
flights %>% filter(year=="2013", month=="March", day=="12")
flights %>% filter(year=="2013", month=="March", day=="12") %>% select(flight)
test <- flights %>% filter(year=="2013", month=="March", day=="12") %>% select(flight)
View(test)
names(flights)
test <- flights %>% filter(year==2013, month=="March", day==12) %>% select(flight)
View(flights)
flights %>% filter(year==2013, month==3, day==12) %>% select(flight)
test <- flights %>% filter(year==2013, month==3, day==12) %>% select(flight)
flights %>% filter(year==2013, month==3, day==12) %>% select(flight)
flights %>% filter(year==2013, month==3, day==12)
names(flights)
flights %>% filter(dep_delay > 2, arr_delay > 2)
band_members_4rows
band_members
band_members_4rows <- band_members %>%
add_row(name="Paul", band="Wings")
band_members %>% inner_join(band_instruments2)
band_members %>% inner_join(band_instruments2, by=c(name="artist"))
flights %>% filter(dep_delay > 2 || arr_delay > 2)
flights %>% select(carrier=="united")
names(flights)
install.packages("ggplot2")
grades <- tibble(CWID=c(1234567, 2356902, 5005667),
NAME=c("Mary", "Lee", "Elena"),
CPSC120=c(3,4,NA), CPSC121=c(3.3,3,2), CPSC131=c(3,4,3.7),
MATH338=c(3,NA,3.3))
grades %>% pivot_longer(c('cpsc120', 'cpsc121', 'cpsc131', 'cpsc338'), names_to="courses", values_to="grades")
library(dplyr)
grades %>% pivot_longer(c('cpsc120', 'cpsc121', 'cpsc131', 'cpsc338'), names_to="courses", values_to="grades")
library(tidyverse)
library(tidyr)
grades %>% pivot_longer(c('cpsc120', 'cpsc121', 'cpsc131', 'cpsc338'), names_to="courses", values_to="grades")
grades %>% pivot_longer(c('CPSC120', 'CPSC121', 'CPSC131', 'CPSC338'), names_to="courses", values_to="grades")
grades %>% pivot_longer(c('CPSC120', 'CPSC121', 'CPSC131', 'MATH338'), names_to="courses", values_to="grades")
flights %>% arrange(-air_time)
flights %>% arrange(air_time)
grades
TRUE)
grades %>% pivot_longer(cols=3:6,names_to="class",values_to="gpa",values_drop_na=TRUE)
flights %>% filter(dep_delay > 2 & arr_delay > 2)
flights %>% filter(dep_delay > 2 | arr_delay > 2)
flights %>% filter(carrier %in% c("UA","AA","DL"))
flights %>% arrange(air_time)
flights %>% arrange(-air_time)
flights %>% arrange(-air_time) %>% select(origin,dest)
flights %>% filter(dep_delay > 120 | arr_delay > 120)
flights %>% filter(dep_delay > 120, arr_delay > 120)
flights %>% mutate(total_delay=(dep_delay + arr_delay))
flights %>% mutate(total_delay=(dep_delay + arr_delay)) %>% View()
total_delay <- mutate(total_delay=(dep_delay + arr_delay))
total_delay <- mutate(total_delay=(flights$dep_delay + flights$arr_delay))
total_delay <- mutate(total_delay=(nycflights13::flights$dep_delay + nycflights13::flights$arr_delay))
flights %>% mutate(total_delay=(dep_delay + arr_delay)) %>% View()
View(flights)
total_delay <- mutate(total_delay=(nycflights13::flights$dep_delay + nycflights13::flights$arr_delay))
flights %>% mutate(total_delay=(dep_delay + arr_delay)) %>% View()
flights %>% mutate(total_delay=(dep_delay + arr_delay)) %>% arrange(-total_delay) %>% select(origin,dest)
flights %>% head(arrange(dep_delay))
flights %>% arrange(dep_delay)
flights %>% arrange(dep_delay) %>% select(origin,dest)
head(flights) %>% arrange(dep_delay) %>% select(origin,dest)
head(flights) %>% arrange(dep_delay) %>% head(select(origin,dest))
most_delayed <- arrange(dep_delay) %>% select(origin,dest)
most_delayed <- arrange(flights, dep_delay) %>% select(origin,dest)
most_delayed
head(most_delayed)
slice(most_delayed,1:10)
flights %>% filter(dep_delay > 120 & arr_delay > 120)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("~/Downloads/r-cran-tidyverse_1.3.0.orig.tar.gz", repos = NULL, type = "source")
library(tidyverse)
library(tidyverse)
library(modelr)
m <- lm(data=iris,Petal.Length~Petal.Width)
iris <- iris %>% add_residuals(m)
View(iris)
ggplot(data=iris) + geom_histogram(mapping=aes(x=resid))
iris %>% mutate(rstd=rstandard(m)) %>% View()
irisOutliers <- iris %>% mutate(rstd=rstandard(m)) %>% filter(rstd>2 | rstd<-2)
irisOutliers <- iris %>% mutate(rstd=rstandard(m)) %>% filter(rstd>2 | rstd < -2)
View(irisOutliers)
m <- lm(data=iris, Petal.Length~Petal.Width)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Width,y=Petal.Length))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Width,y=Petal.Length)) + geom_point(data=irisOutliers, mapping=aes(x=Petal.Width,y=Petal.Length), color="red")
mycf <- coef(m)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Width,y=Petal.Length)) + geom_point(data=irisOutliers, mapping=aes(x=Petal.Width,y=Petal.Length), color="red") + geom_abline(slope=mycf[2], intercept=mycf[1])
predx <- data.frame(Patel.Width=c(0.5,1.0,2.0))
predict(m,predx)
predict(m, predx)
predx <-data.frame(Petal.Width=c(0.5, 1.0, 2.0))
predict(m, predx)
predict(m, predx, interval = "prediction", level = 0.95)
predict(m, predx, interval = "confidence", level = 0.95)
m <- lm(data=iris, Petal.Length~Petal.Width+Sepal.Width)
m
m <- lm(data=iris, Petal.Length~Petal.Width+Sepal.Length)
m
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Width,y=Petal.Length), color=Sepal.Length)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Width,y=Petal.Length,color=Sepal.Length)
a
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Width,y=Petal.Length,color=Sepal.Length))
m0 <- lm(data=iris, Petal.Length~Petal.Width+Sepal.Width)
m2 <- lm(data=iris, Petal.Length~Petal.Width+Sepal.Length)
m1 <- lm(data=iris, Petal.Length~Petal.Width)
summary(m0)
iris <- iris %>% mutate(x3=runif(150))
m0 <- lm(data=iris, Petal.Length~Petal.Width+Sepal.Width+x3)
summary(m0)
m1 <- lm(data=iris, Petal.Width~Petal.Length)
summary(m1)
m2 <- lm(data=iris, Petal.Width~Petal.Length+Sepal.Length)
summary(m2)
m6 <- lm(data=iris, Petal.Width~Petal.Length+Species)
summary(m6)
sem <- c("Freshman", "Soph", "Junior", "Senior")
sem
library(modelr)
iris %>% add_predictions(m6) %>% View()
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species))
library(tidyverse)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length,y=pred,color=Species))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length,y=pred,color=Species))
iris %>% add_predictions(m6)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length,y=pred,color=Species))
ggplot(data=iris) + geom_point(mapping=aes(y=Petal.Length,x=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length,y=pred,color=Species))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length,y=pred,color=Species))
iris %>% add_predictions(m6) %>% View()
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length, y=pred, color=Species))
library(tidyr)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length, y=pred, color=Species))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_line(mapping=aes(x=Petal.Length, y=pred, color=Species))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length, y=pred, color=Species))
iris %>% add_predictions(m6)
iris <- iris %>% add_predictions(m6)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_line(mapping=aes(x=Petal.Length, y=pred, color=Species))
rm(iris)
View(iris)
m7 <- lm(data=iris, Petal.Length~PW2)
iris <- iris %>% mutate(PW2= Petal.Width^2)
m7 <- lm(data=iris, Petal.Length~PW2)
iris <- iris %>% add_predictions(m7)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_line(mapping=aes(x=Petal.Length, y=pred), color="red")
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_line(mapping=aes(x=Petal.Width, y=pred), color="red")
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Width,y=Petal.Length)) + geom_line(mapping=aes(x=Petal.Width, y=pred), color="red")
library(tidyverse)
library(dplyr)
library(modelr)
type(iris)
class(iris)
iris[5,]
iris[,5]
grades
mean(grades$CPSC121)
grades %>% summarize(CPSC121)
grades %>% mean(CPSC121)
test <- c("name","lastname","band","year")
test
test %>% select(name,lastname,band)
test %>% select(1,2,3)
test %>% c(name,lastname,band,year)
test %>% c(name, lastname, band, year)
test <- c("name","lastname","band","year")
test %>% select(-year)
library(dplyr)
test %>% select(-year)
iris %>% select(Sepal.Length)
View(iris)
iris %>% select(Sepal.Length, Sepal.Width)
iris %>% select(1,2,3)
iris %>% select(1:3)
iris %>% select(-Petal.Width)
x <- 25
x %>% sum() %>% sqrt()
x %>% sqrt() %>% sum()
sqrt(sum(25))
sqrt() %>% sum() %>% x
x <- c(5,10,25)
sqrt(sum(x))
x %>% sqrt() %>% sum()
x %>% sum() %>% sqrt()
left_table <- C("name","lastname","band")
left_table <- c("name","lastname","band")
right_table <- c("firstname","lastname","band","year")
left_table %>% inner_join(right_table)
left_table <- data.frame("name","lastname","band")
right_table <- data.frame("firstname","lastname","band","year")
left_table %>% inner_join(right_table)
left_table
band_instruments
name <- c("Bob", "Tina")
lastname <- c("Burger", "Fish")
band <- c("sucker", "lolz")
left_table <- data.frame(name,lastname,band)
left_table
firstname <- c("Bob", "Loo")
lastname <- c("Burger", "King")
band <- c("sucker", "waa")
year <- c("2023", "2024")
right_table <- data.frame(firstname,lastname,band,year)
left_table %>% inner_join(right_table)
mpg
mpg %>% filter(cyl == 4 | cyl == 6)
mpg %>% filter(cyl == 4 | cyl == 6) %>% select(manufacturer,model,year)
mpg %>% arrange(hwy) %>% select(manufacturer,model,year)
mpg %>% arrange(hwy) %>% select(manufacturer,model,year,hwy)
mpg %>% group_by(filter(hwy < 2))
mpg %>% group_by(hwy) %>% filter(hwy > 30)
mpg %>% group_by(hwy) %>% filter(hwy > 30) %>% summarise(number_of_row=n())
mpg %>% filter(hwy > 30) %>% summarise(number_of_row=n())
mpg %>% group_by(manufacturer) %>% summarise(mean_hwy_mileague=mean(hwy))
mpg %>% group_by(manufacturer) %>% summarise(mean_hwy_mileague=mean(hwy)) %>% filter(mean_hwy_mileague < 20)
state <- c("California", "California","California", Oregon)
state <- c("California", "California","California", "Oregon"")
county <- c("Orange", "Los Angeles", "San Diego", "Wasco")
county <- c("Orange", "Los Angeles", "San Diego", "Wasco")
countyseat <- c("Santa Ana", "Los Angeles", "San Diego", "The Dalles")
countyseats <- data.frame(state,county,countyseat)
state <- c("California", "California","California", "Oregon")
countyseats <- data.frame(state,county,countyseat)
countyseats
state <- c("California", "California","California", ,"California")
state <- c("California", "California","California", "California")
county <- c("Orange", "Orange", "Los Angeles", "Los Angeles")
year <- c("2000", "2010", "2000", "2010")
population <- c("2846289", "3010232", "3694820", "3792621")
population <- data.frame(state,county,year,population)
countyseats %>% inner_join(population)
x <- c(16, 50, 37, 100)
x - min(x)
(x-min(x))/(max(x)-min(x))
normalize <- function(x) {
return ((x-min(x))/(max(x)-min(x)))
}
normalize(x)
View(iris)
rm(iris)
View(iris)
iris %>% mutate(Sepal.Length.norm=normalize(Sepal.Length))
library(tidyverse)
iris %>% mutate(Sepal.Length.norm=normalize(Sepal.Length))
iris %>% mutate(Sepal.Length.norm=normalize(Sepal.Length)) %>% View()
irismeans <- kmeans(iris[,3:4],centers=3)
irismeans
library(tidyverse)
ggplot(data=iris) + geom_point(mapping=aes(x=Sepal.Length,y=Sepal.Width))
ggplot(data=iris) + geom_point(mapping=aes(x=Pepal.Length,y=Pepal.Width))
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width))
irismeans <- kmeans(iris[,3:4],centers=3)
irismeans
irismeans$centers
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point(centers,mapping = aes(x.Petal.Length,y=Petal.Width), color="red")
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point(data=as.data.frame(centers),mapping = aes(x.Petal.Length,y=Petal.Width), color="red")
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point(data=as.data.frame(irismeans$centers),mapping = aes(x.Petal.Length,y=Petal.Width), color="red")
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point(data=as.data.frame(irismeans$centers),mapping = aes(x=Petal.Length,y=Petal.Width), color="red")
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point(data=as.data.frame(irismeans$centers),mapping = aes(x=Petal.Length,y=Petal.Width), color="red", size=4)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width),color=Species) + geom_point(data=as.data.frame(irismeans$centers),mapping = aes(x=Petal.Length,y=Petal.Width), color="red", size=4)
ggplot(data=iris) + geom_point(mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(data=as.data.frame(irismeans$centers),mapping = aes(x=Petal.Length,y=Petal.Width), color="red", size=4)
irismeans$cluster
table(iris$Species, irismeans$cluster)
irismeans <- kmeans(iris[,3:4],centers=3)
table(iris$Species, irismeans$cluster)
irismeans <- kmeans(iris[,1:4],centers=3)
table(iris$Species, irismeans$cluster)
irismeans <- kmeans(iris[,1:4],centers=3)
irismeans <- kmeans(iris[,1:4],centers=3)
table(iris$Species, irismeans$cluster)
irismeans <- kmeans(iris[,1:4],centers=3,nstart=100)
table(iris$Species, irismeans$cluster)
pwd
library(tidyverse)
?nottem
class(nottem)
plot(nottem)
nottem
plot(decompose((nottem)))
mydata2 <- as.vector(nottem)
mydata2
mydata2.ts <- ts(mydata2)
mydata2.ts <- ts(mydata2, frequency=12)
plot(decompose(mydata2.ts))
dailymintemp <- read_csv(https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv)
dailymintemp <- read_csv("https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv")
acf(dailymintemp)
acf(dailymintemp, lag.max = 30)
acf(dailymintemp, lag.max = 300)
acf(dailymintemp, lag.max = 200)
acf(dailymintemp, lag.max = 100)
acf(dailymintemp, lag.max = 150)
acf(dailymintemp, lag.max = 80)
acf(dailymintemp, lag.max = 400)
acf(dailymintemp, lag.max = 900)
acf(dailymintemp, lag.max = 2000)
acf(dailymintemp, lag.max = 10000)
acf(dailymintemp, lag.max = 10000000)
acf(dailymintemp, lag.max = 1000000)
acf(dailymintemp, lag.max = 10000)
acf(dailymintemp, lag.max = 20000)
acf(dailymintemp, lag.max = 90000)
acf(dailymintemp, lag.max = 3000)
acf(dailymintemp, lag.max = 9000)
acf(dailymintemp, lag.max = 10000)
acf(dailymintemp, lag.max = 30000)
acf(dailymintemp, lag.max = 8000)
acf(dailymintemp, lag.max = 5000)
acf(dailymintemp, lag.max = 500)
dailymintemp.ts <- ts(dailymintemp, frequency = 200)
decompose(dailymintemp.ts)
plot(decompose(dailymintemp.ts))
acf(dailymintemp, lag.max = 500)
plot(decompose(dailymintemp.ts))
dailymintemp.ts <- ts(dailymintemp, frequency = 200)
acf(dailymintemp, lag.max = 500)
dailymintemp.ts <- ts(dailymintemp, frequency = 450)
plot(decompose(dailymintemp.ts))
acf(dailymintemp, lag.max = 500)
acf(dailymintemp$Temp, lag.max = 500)
acf(dailymintemp$Temp, lag.max = 5000)
dailymintemp.ts <- ts(dailymintemp$Temp, frequency = 450)
plot(decompose(dailymintemp.ts))
setwd("~/Desktop/python")
textfile = read.table('texts.txt',sep='\t')
textfile = read.table('texts.txt',sep='\t')
View(textfile)
class(textfile)
library(wordcloud)
library(tidytext)
install.packages("tidytext")
library(tidytext)
install.packages("wordcloud")
library(wordcloud)
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(wordcloud)
text_df %>% unnest_tokens(input=V1, output="word")
library(tidyverse)
text_df %>% unnest_tokens(input=V1, output="word")
textfile %>% unnest_tokens(input=V1, output="word")
wordcounts <- textfile %>% unnest_tokens(input=text, output="word") %>% count(word)
wordcounts <- textfile %>% unnest_tokens(input=V1, output="word") %>% count(word)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
wordcloud(wordcounts$word, wordcounts$n)
wordcounts
wordcloud(wordcounts$word, wordcounts$n)
> stopwords_df<- textfile %>% unnest_tokens(input=V1, output=word) %>%
stopwords_df<- textfile %>% unnest_tokens(input=V1, output=word) %>%
+    anti_join(stop_words)
stopwords_df<- textfile %>% unnest_tokens(input=V1, output=word) %>% anti_join(stop_words)
stopwords_df <- stopwords_df %>% count(word)
wordcloud(stopwords_df$word, stopwords_df$n)
textfile %>% unnest_tokens(input=V1, output="word")
wordcounts <- textfile %>% unnest_tokens(input=V1, output="word") %>% count(word)
wordcloud(wordcounts$word, wordcounts$n)
wordcounts
library(tidyverse)
ggplot(data=wordcounts)  +geom_col(aes(word,n))
wordcloud(wordcounts$word, wordcounts$n)
library(wordcloud)
install.packages(("RColorBrewer"))
install.packages(("RColorBrewer"))
library(wordcloud)
wordcloud(wordcounts$word, wordcounts$n)
ggplot(data=wordcounts)  +geom_col(aes(word,n))
dev.off()
plot(rnorm(50), rnorm(50))
dev.off()
dev.off()
plot(rnorm(50), rnorm(50))
setwd("~/")
plot(rnorm(50), rnorm(50))
dev.off()
dev.off()
setwd("~/R")
dev.off()
setwd("~/Desktop/python")
plot(rnorm(50), rnorm(50))
plot(rnorm(50), rnorm(50))
plot(rnorm(50), rnorm(50))
actualtextfile = read.table('actualtext.txt',sep='\t')
View(actualtextfile)
actualtextfile %>% unnest_tokens(input=V1, output="word")
library(tidyverse)
actualtextfile %>% unnest_tokens(input=V1, output="word")
library(tidytext)
actualtextfile %>% unnest_tokens(input=V1, output="word")
actual_wordcounts <- actualtextfile %>% unnest_tokens(input=V1, output="word") %>% count(word)
library(wordcloud)
library(RColorBrewer)
wordcloud(actual_wordcounts$word, actual_wordcounts$n)
library(dplyr)
anti_join(wordcounts, actual_wordcounts)
difference_in_files <- anti_join(wordcounts, actual_wordcounts)
wordcloud(difference_in_files$word, difference_in_files$n)
ggplot(data=difference_in_files) + geom_col(aes(word,n))
actual_wordcounts
wordcounts
# this is used on generated text file
textfile = read.table('texts.txt',sep='\t')
# this is used on generated text file
textfile = read.table('texts.txt',sep='\t')
textfile %>% unnest_tokens(input=V1, output="word")
wordcounts <- textfile %>% unnest_tokens(input=V1, output="word") %>% count(word)
wordcloud(wordcounts$word, wordcounts$n)
# this is used on actual text file
actualtextfile = read.table('actualtext.txt',sep='\t')
actualtextfile %>% unnest_tokens(input=V1, output="word")
actual_wordcounts <- actualtextfile %>% unnest_tokens(input=V1, output="word") %>% count(word)
difference_in_files <- anti_join(wordcounts, actual_wordcounts)
difference_in_files
actual_wordcounts
wordcounts
test <- setdiff(wordcounts, actual_wordcounts)
test
wordcloud(test$word, test$n)
# Language - French
# this is used on generated text file
# pre-processing is required on this file - simply go to text file, go to end of file, and hit enter
# then save file
textfile = read.table('sampletexts.txt',sep='\t')
setwd("~/Desktop/python/evaluation and data")
# Language - French
# this is used on generated text file
# pre-processing is required on this file - simply go to text file, go to end of file, and hit enter
# then save file
textfile = read.table('sampletexts.txt',sep='\t')
textfile %>% unnest_tokens(input=V1, output="word")
library(tidyverse)
library(tidytext)
textfile %>% unnest_tokens(input=V1, output="word")
wordcounts <- textfile %>% unnest_tokens(input=V1, output="word") %>% count(word)
wordcloud(wordcounts$word, wordcounts$n)
library(RBrewerColor)
library(RColorBrewer)
wordcloud(wordcounts$word, wordcounts$n)
library(wordcloud)
wordcloud(wordcounts$word, wordcounts$n)
# this is used on actual text file
# actual text file is manually created by user - simply download .srt file from youtube
# or simply type subtitles down onto a blank text file
actualtextfile = read.table('actualtext.txt',sep='\t')
actualtextfile %>% unnest_tokens(input=V1, output="word")
actual_wordcounts <- actualtextfile %>% unnest_tokens(input=V1, output="word") %>% count(word)
wordcloud(actual_wordcounts$word, actual_wordcounts$n)
difference_in_files <- anti_join(wordcounts, actual_wordcounts)
View(difference_in_files)
# displays differences in received and actual texts, showing how many "mistakes" were made
View(difference_in_files)
